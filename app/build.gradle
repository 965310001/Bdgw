apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin

/*引入自定义的文件*/
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(rootProject.file("constants.properties")))

//Bugtags
//应用 Bugtags 插件，插件只支持 2.1.3 及以下的 ios 版本
apply plugin: 'com.bugtags.library.plugin'

//Bugtags 插件配置
bugtags {
    //自动上传符号表功能配置，如果需要根据 build varint 配置，请参考帮助中心->符号表->Android 符号表->配置自动上传符号表
    appKey keystoreProperties['BUGTAGS_APPKEY']  //这里是你的 appKey
    appSecret keystoreProperties['BUGTAGS_APPSECRET']    //这里是你的 appSecret，管理员在设置页可以查看
    mappingUploadEnabled true
}

android {
    /*Bugtags*/
    useLibrary 'org.apache.http.legacy'

    compileSdkVersion rootProject.ext.versions.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.versions.applicationId
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath = true
            }
        }
        multiDexEnabled true

//        ndk {
//            // 设置支持的 SO 库构架，一般而言，取你所有的库支持的构架的`交集`。
//            abiFilters 'armeabi'// 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
//        }

    }

    /*签名*/
    signingConfigs {
        config {
            storeFile file(keystoreProperties['KEY_STOREFILE'])
            storePassword keystoreProperties['KEY_PASSWORD']
            keyPassword keystoreProperties['KEY_PASSWORD']
            keyAlias keystoreProperties['KEY_ALIAS']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            /*开启签名*/
            signingConfig signingConfigs.config
            buildConfigField "String","APP_URL","\"http://api.bdgw.cc/\""
        }
        debug{
            buildConfigField "String","APP_URL","\"http://api.biandanwang.cc/\""
        }
    }

/*    greendao {
        schemaVersion 1 //数据库版本号
        daoPackage 'com.aserbao.aserbaosandroid.functions.database.greenDao.db'
// 设置DaoMaster、DaoSession、Dao 包名
        targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
        generateTests false //设置为true以自动生成单元测试。
        targetGenDirTests 'src/main/java' //应存储生成的单元测试的基本目录。默认为 src / androidTest / java。
    }*/

}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.dependencies['appcompat_v7']
    implementation rootProject.ext.dependencies['support-v4']
    implementation rootProject.ext.dependencies['constraint_layout']
    implementation rootProject.ext.dependencies['espresso_core']
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    testImplementation rootProject.ext.dependencies['junit']

    androidTestImplementation rootProject.ext.dependencies['runner']
    androidTestImplementation rootProject.ext.dependencies['espresso_core']

    annotationProcessor rootProject.ext.dependencies["arouter_compiler"]
    annotationProcessor rootProject.ext.dependencies["butterknife_compiler"]

    implementation project(':common_base')

    //设置界面条目封装
    implementation rootProject.ext.dependencies['lsettingviewlibrary']


    implementation project(':xui')

    api 'org.greenrobot:greendao:3.2.2' // add library
    api 'org.greenrobot:greendao-generator:3.2.2'
    implementation 'com.contrarywind:Android-PickerView:3.2.6'

    implementation rootProject.ext.dependencies['glide']
    annotationProcessor rootProject.ext.dependencies['glide_compiler']

    //bugtags
    implementation rootProject.ext.dependencies['bugtags-lib']

//    implementation 'com.bugtags.library:bugtags-lib:latest.integration'

    //带有徽标(数字，小红点)的按钮
//    implementation 'com.github.czy1121:badgebutton:1.1.0'
//    implementation 'com.leon:lsettingviewlibrary:1.7.0'
//    implementation 'com.android.support:appcompat-v7:28.0.0'
//    implementation 'com.android.support:support-v4:28.0.0'
//    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    testImplementation 'junit:junit:4.12'

}
